var n=Object.defineProperty;var c=(i,o,t)=>o in i?n(i,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[o]=t;var s=(i,o,t)=>c(i,typeof o!="symbol"?o+"":o,t);import{m as a}from"./main-BSEyQEJW.js";import{B as h}from"./BasicRest-DEv02zgs.js";class m extends h{constructor(){super(...arguments);s(this,"path","admin/system");s(this,"savePage",async(t={})=>{try{const{status:e,result:r}=await a.Fetch(`/api/${this.path}/page`,{method:"POST",body:JSON.stringify(t)});if(!e)throw new Error((r==null?void 0:r.message)||"Ocurrio un error inesperado");return r.data??[]}catch(e){return a.Notify.add({icon:"/assets/img/icon.svg",title:"Error",body:e.message,type:"danger"}),null}});s(this,"updateOrder",async t=>{try{const{status:e,result:r}=await a.Fetch(`/api/${this.path}/order`,{method:"PATCH",body:JSON.stringify(t)});if(!e)throw new Error((r==null?void 0:r.message)??"Ocurrio un error inesperado");return!0}catch(e){a.Notify.add({icon:"/assets/img/icon.svg",title:"Error",body:e.message,type:"danger"})}});s(this,"deletePage",async t=>{try{const{status:e,result:r}=await a.Fetch(`/api/${this.path}/page/${t}`,{method:"DELETE"});if(!e)throw new Error((r==null?void 0:r.message)||"Ocurrio un error inesperado");return r.data??!0}catch(e){return a.Notify.add({icon:"/assets/img/icon.svg",title:"Error",body:e.message,type:"danger"}),!1}});s(this,"exportBK",async()=>{try{const{status:t,result:e}=await a.Fetch(`/api/${this.path}/backup`);if(!t)throw new Error((e==null?void 0:e.message)||"Ocurrio un error inesperado");return e}catch(t){return a.Notify.add({icon:"/assets/img/icon.svg",title:"Error",body:t.message,type:"danger"}),null}});s(this,"importBK",async t=>{try{const e=await fetch(`/api/${this.path}/backup`,{method:"POST",headers:{"X-Xsrf-Token":decodeURIComponent(a.Cookies.get("XSRF-TOKEN"))},body:t}),r=JSON.parseable(await e.text());if(!e.ok)throw new Error((r==null?void 0:r.message)||"Ocurrio un error inesperado");return r??!0}catch(e){return a.Notify.add({icon:"/assets/img/icon.svg",title:"Error",body:e.message,type:"danger"}),null}});s(this,"hasRemoteChanges",async()=>await this.simpleGet(`/api/${this.path}/has-remote-changes`));s(this,"fetchRemoteChanges",async()=>await this.simpleGet(`/api/${this.path}/fetch-remote-changes`))}}export{m as S};
